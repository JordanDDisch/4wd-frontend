image: node:12-buster

definitions:
  caches:
    yarn: /usr/local/share/.cache/yarn
  steps:
    - step: &env-artifact
        name: Select env file
        artifacts:
          - .env
          - static/**
    - step: &build
        name: Build
        caches:
          - node
          - yarn
        script:
          - yarn install --verbose
          - yarn test
          - yarn build
        artifacts:
          - dist/**
    - step: &notify-build-complete
        name: Notify Build Complete
        script:
          - pipe: atlassian/slack-notify:0.3.6
            variables:
              WEBHOOK_URL: $WEBHOOK_URL
              MESSAGE: "Build complete; click pipeline link above and manually trigger to deploy"
    - step: &deploy-and-invalidate
        name: Deploy and Invalidate CDN
        script:
          - export BITBUCKET_COMMIT_SHORT="${BITBUCKET_COMMIT::7}"
          - pipe: atlassian/slack-notify:0.3.6
            variables:
              WEBHOOK_URL: $WEBHOOK_URL
              MESSAGE: "Deploying branch $BITBUCKET_BRANCH@$BITBUCKET_COMMIT_SHORT to environment $BITBUCKET_DEPLOYMENT_ENVIRONMENT"
          - pipe: atlassian/aws-s3-deploy:0.4.4
            variables:
              AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
              AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
              AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
              S3_BUCKET: $S3_BUCKET
              LOCAL_PATH: 'dist'
              DELETE_FLAG: 'true'
          - pipe: atlassian/aws-cloudfront-invalidate:0.3.3
            variables:
              AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
              AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
              AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
              DISTRIBUTION_ID: $CLOUDFRONT_DISTRIBUTION_ID
          - pipe: atlassian/slack-notify:0.3.6
            variables:
              WEBHOOK_URL: $WEBHOOK_URL
              MESSAGE: "Deployment complete: $SITE_URL"

pipelines:
  pull-requests:
    '**':
      - step:
          <<: *env-artifact
          script:
            - cp -v .env.staging .env
      - step: *build
  branches:
    preproduction:
      - step:
          <<: *env-artifact  
          script:
            - cp -v .env.staging .env
            - cp -v robots.staging.txt ./static/robots.txt
      - step: *build
      - step:
          <<: *deploy-and-invalidate
          deployment: staging
    production:
      - step:
          <<: *env-artifact
          script:
            - cp -v .env.production .env
            - cp -v robots.production.txt ./static/robots.txt
      - step: *build
      - step: *notify-build-complete
      - step:
          <<: *deploy-and-invalidate
          deployment: production
          trigger: manual
